// Base class
//
// Easily usable on <ul>, <ol>, or <div>.

.list-group {
  // No need to set list-style: none; since .list-group-item is block level
  list-style: none;
  padding-left: 0; // reset padding because ul and ol
  margin-bottom: 0;
}


// Individual list items
//
// Use on `li`s or `div`s within the `.list-group` parent.

.list-group-item {
  position: relative;
  display: block;
  padding: .5rem 1rem;
  // Place the border on the list items and negative margin up for better styling
  margin-bottom: -.0625rem;
  background-color: $list-group-bg;
  border: .0625rem solid $list-group-border;

  // Round the first and last items
  &:first-child {
    @include border-top-radius($list-group-border-radius);
  }
  &:last-child {
    margin-bottom: 0;
    @include border-bottom-radius($list-group-border-radius);
  }
}

.list-group-item-hover {
    padding: 0;
    a, button {
        display: block;
        padding-left: 1rem;
        padding-right: 1rem;
    }
    > a, 
    > button {
        padding-bottom: .5rem;   
        padding-top: .5rem;    
    }
}

// Interactive list items
//
// Use anchor or button elements instead of `li`s or `div`s to create interactive
// list items. Includes an extra `.active` modifier class for selected items.

.list-group-item-hover a,
.list-group-item-hover button,
a.list-group-item,
button.list-group-item {
  width: 100%;
  text-align: inherit;
  color: $list-group-link-color;

  .list-group-item-heading {
    color: $list-group-link-heading-color;
  }

  // Hover state
  @include hover-focus {
    color: $list-group-link-hover-color;
    text-decoration: none;
    background-color: $list-group-hover-bg;
  }
  
  &:focus {
      background-color: $list-group-bg;
      color: $list-group-link-color;
  }
}

.list-group-sm {
    .list-group-item {
        font-size: .85em;
        padding: .35rem 1rem;
    }
}

.list-group-link {
    color: $list-group-link-color;
    &:hover {
        color: #000;
        text-decoration: none;
    }
    .active &,
    &.active {
        color: $list-group-active-text-color;
    }
}

.list-group-item {
  // Disabled state
  &.disabled {
    @include plain-hover-focus {
      color: $list-group-disabled-color;
      cursor: $cursor-disabled;
      background-color: $list-group-disabled-bg;

      // Force color to inherit for custom content
      .list-group-item-heading {
        color: inherit;
      }
      .list-group-item-text {
        color: $list-group-disabled-text-color;
      }
    }
  }

  // Active class on item itself, not parent
  &.active {
    @include plain-hover-focus {
      z-index: 2; // Place active items above their siblings for proper border styling
      color: $list-group-active-color;
      background-color: $list-group-active-bg;
      border-color: $list-group-active-border;
      font-weight: 500;

      // Force color to inherit for custom content
      .list-group-item-heading,
      .list-group-item-heading > small,
      .list-group-item-heading > .small {
        color: inherit;
      }
      .list-group-item-text {
        color: $list-group-active-text-color;
      }
      // add border to left if .list-group-active-border is added to the parent
      .list-group-active-border & {
          position: relative;
          &:after {
            background: $brand-info;
            content: '';
            display: block;
            height: calc(100% + 2px);
            left: -1px;
            position: absolute;
            top: -1px;
            width: .2rem;
        }
      }
    }
  }
}


// Contextual variants
//
// Add modifier classes to change text and background color on individual items.
// Organizationally, this must come after the `:hover` states.

@include list-group-item-variant(success, $state-success-bg, $state-success-text);
@include list-group-item-variant(info, $state-info-bg, $state-info-text);
@include list-group-item-variant(warning, $state-warning-bg, $state-warning-text);
@include list-group-item-variant(danger, $state-danger-bg, $state-danger-text);


// Custom content options
//
// Extra classes for creating well-formatted content within `.list-group-item`s.

.list-group-item-heading {
  margin-top: 0;
  margin-bottom: 5px;
}

.list-group-item-text {
  margin-bottom: 0;
  line-height: 1.3;
}

.list-group-flush {
  .list-group-item {
    border-width: .0625rem 0;
    border-radius: 0;
  }
}

.list-group-item-transparent {
    background: transparent;
    border: none;
    color: $gray-light;
    font-weight: 500;
    padding: .4rem 0 .4rem 1.25rem;
    text-shadow: 1px 1px 0 #fff;
    &:hover {
        background: darken($gray-lighter,7.5%) !important;
    }
    &.active,
    &.active:hover,
    &.active:focus {
        background: none;
        color: #000;
        position: relative;
        text-shadow: 0 0 1px #fff;
    }
    &.list-icon {
        padding-left: 3rem !important;
        > .icon {
            left: 1.2rem;
        }
    }
}

.list-group-item-transparent.active:after {
    background: #000;
    content: '';
    display: block;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: .3333rem;
}

.list-group-sub-item {
    font-size: .85rem;
    font-weight: normal;
    padding-bottom: .2rem;
    padding-left: 1rem;
    padding-top: .2rem;
}

.list-group-item-transparent.list-group-sub-item {
    padding-left: 2.25rem;
}

/* nested to build hierarchical navs */
.list-group .list-group {
    display: none;
}

.active .list-group {
    display: block;
}